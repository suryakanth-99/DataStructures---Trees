'''
given an input like 10 20 L 10 30 R 20 40 L
we have to create a binary tree with 10 as root node,
20 as left child of 10, 30 as right child of 10, 40 as
left child of 20.
'''

class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None


def levelorder(root):
    q=[]
    if root is None:
        return
    q.append(root)
    while(len(q)>0):
        print(q[0].data , end=' ')
        root=q.pop(0)
        if root.left is not None:
            q.append(root.left)
        if root.right is not None:
            q.append(root.right)


def insert(root,value):
    if root is None:
        return
    q=[]
    q.append(root)
    while len(q)>0 :
        root=q.pop(0)
        if root.left is not None:
            q.append(root.left)

        else:
            root.left=Node(value)
            break
        if root.right is not None:
            q.append(root.right)
        else:
            root.right=Node(value)
            break


if __name__ == '__main__':
    root = None
    n = int(input())
    l = list(input().rstrip().split())
    i = 0
    treenodes = {}
    while n > 0:
        parent = int(l[i])
        child = int(l[i+1])
        pos = l[i+2]
        if i == 0:
            root = Node(parent)
            treenodes[parent] = root
        parentnode = treenodes[parent]
        childnode = Node(child)
        if pos == 'L':
            parentnode.left = childnode
        else:
            parentnode.right = childnode
        treenodes[child] = childnode

        i=i+3
        n=n-1

    levelorder(root)
    print()
    insert(root,25)
    levelorder(root)
